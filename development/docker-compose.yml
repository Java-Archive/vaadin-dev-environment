version: '3.5'

services:


  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  portainer:
    container_name: portainer
    hostname: portainer
    image: portainer/portainer:latest
    ports:
      - 9000
    volumes:
      - $PWD/portainer/data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - VIRTUAL_HOST=portainer.rapidpm.org
    depends_on:
      - nginx-proxy

  nexus-server:
    container_name: nexus-server
    hostname: nexus-server
    image: sonatype/nexus3:${NEXUS_VERSION}
    ports:
      - 8081
#      - 8082
#      - 8083
    volumes:
      - $PWD/nexus/data:/nexus-data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - VIRTUAL_HOST=nexus.rapidpm.org
    depends_on:
      - nginx-proxy

  git-server:
    container_name: git-server
    hostname: git-server
    image: gitea/gitea:${GIT_VERSION}
#    privileged: true
    ports:
      - 80
      - 22
    volumes:
      - $PWD/gitea/data:/data
      - $PWD/gitea/app.ini:/data/gitea/conf/app.ini
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - VIRTUAL_HOST=git.rapidpm.org
    depends_on:
      - nginx-proxy

#  drone-server:
#    container_name: drone-server
#    hostname: drone-server
#    image: drone/drone:${DRONE_VERSION}
#    privileged: true
#    ports:
#      - 8000:8000
#      - 9000:9000
#    volumes:
#      - ./droneio/drone:/var/lib/drone/
#    depends_on:
#      - git-server
#      - nexus-server
#    environment:
#      - DRONE_DEBUG=true
##      - DRONE_HOST=http://drone-server.home:8000
#      - DRONE_HOST=http://${DRONE_DOCKER_EXTERNAL_IP}:8000
#      - DRONE_OPEN=true
#      - DRONE_SECRET=ok
#      - DRONE_PLUGIN_PULL=true
#      - DRONE_GOGS=true
##      - DRONE_GOGS_URL=http://git-server.home:3300
#      - DRONE_GOGS_URL=http://${GIT_DOCKER_EXTERNAL_IP}:3300
#      - DRONE_GOGS_PRIVATE_MODE=true
#      - DRONE_GOGS_SKIP_VERIFY=false
#
#  drone-agent-01:
#    container_name: drone-agent-01
#    hostname: drone-agent-01
#    image: drone/agent:${DRONE_VERSION}
#    privileged: true
#    command: agent
#    depends_on:
#      - drone-server
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
##      - DRONE_SERVER=drone-server.home:9000
#      - DRONE_SERVER=${DRONE_DOCKER_EXTERNAL_IP}:9000
#      - DRONE_SECRET=ok
#
#  drone-agent-02:
#    container_name: drone-agent-02
#    hostname: drone-agent-02
#    image: drone/agent:${DRONE_VERSION}
#    privileged: true
#    command: agent
#    depends_on:
#      - drone-server
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
##      - DRONE_SERVER=drone-server:9000
#      - DRONE_SERVER=${DRONE_DOCKER_EXTERNAL_IP}:9000
#      - DRONE_SECRET=ok
#
#  drone-agent-03:
#    container_name: drone-agent-03
#    hostname: drone-agent-03
#    image: drone/agent:${DRONE_VERSION}
#    privileged: true
#    command: agent
#    depends_on:
#      - drone-server
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
##      - DRONE_SERVER=drone-server:9000
#      - DRONE_SERVER=${DRONE_DOCKER_EXTERNAL_IP}:9000
#      - DRONE_SECRET=ok
#
#  drone-agent-04:
#    container_name: drone-agent-04
#    hostname: drone-agent-04
#    image: drone/agent:${DRONE_VERSION}
#    privileged: true
#    command: agent
#    depends_on:
#      - drone-server
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
##      - DRONE_SERVER=drone-server:9000
#      - DRONE_SERVER=${DRONE_DOCKER_EXTERNAL_IP}:9000
#      - DRONE_SECRET=ok
#
#  drone-agent-05:
#    container_name: drone-agent-05
#    hostname: drone-agent-05
#    image: drone/agent:${DRONE_VERSION}
#    privileged: true
#    command: agent
#    depends_on:
#      - drone-server
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
##      - DRONE_SERVER=drone-server:9000
#      - DRONE_SERVER=${DRONE_DOCKER_EXTERNAL_IP}:9000
#      - DRONE_SECRET=ok
#
#  drone-agent-06:
#    container_name: drone-agent-06
#    hostname: drone-agent-06
#    image: drone/agent:${DRONE_VERSION}
#    privileged: true
#    command: agent
#    depends_on:
#      - drone-server
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
##      - DRONE_SERVER=drone-server:9000
#      - DRONE_SERVER=${DRONE_DOCKER_EXTERNAL_IP}:9000
#      - DRONE_SECRET=ok
#
#  drone-agent-07:
#    container_name: drone-agent-07
#    hostname: drone-agent-07
#    image: drone/agent:${DRONE_VERSION}
#    privileged: true
#    command: agent
#    depends_on:
#      - drone-server
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
##      - DRONE_SERVER=drone-server:9000
#      - DRONE_SERVER=${DRONE_DOCKER_EXTERNAL_IP}:9000
#      - DRONE_SECRET=ok
#
#  drone-agent-08:
#    container_name: drone-agent-08
#    hostname: drone-agent-08
#    image: drone/agent:${DRONE_VERSION}
#    privileged: true
#    command: agent
#    depends_on:
#      - drone-server
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
##      - DRONE_SERVER=drone-server:9000
#      - DRONE_SERVER=${DRONE_DOCKER_EXTERNAL_IP}:9000
#      - DRONE_SECRET=ok
#
#  selenoid-server:
#    container_name: selenoid-server
#    hostname: selenoid-server
#    image: aerokube/selenoid:${SELENOID_VER}
#    privileged: true
#    network_mode: bridge
#    ports:
#      - 4444:4444
#    volumes:
#      - $PWD/selenoid/browsers.json:/etc/selenoid/browsers.json
#      - $PWD/selenoid/video/:/opt/selenoid/video/
#      - /var/run/docker.sock:/var/run/docker.sock
#    command: [--conf,             "/etc/selenoid/browsers.json",
#              --video-output-dir, "/opt/selenoid/video",
#              --limit ,           "10" ,
#              --mem,              "128m"]
#
#  selenoid-ui:
#    container_name: selenoid-ui
#    hostname: selenoid-ui
#    image: aerokube/selenoid-ui:${SELENOID_VER}
#    privileged: true
#    network_mode: bridge
#    ports:
#      - 8888:8080  #port 8080 is used by FnProject
#    restart: always
#    depends_on:
#      - selenoid-server
#    links:
#      - selenoid-server
#    command: [--selenoid-uri, "http://selenoid-server:4444"]
#
#
#  youtrack:
#      image: jetbrains/youtrack:2018.2.42133
#      container_name: youtrack
#      hostname: youtrack
#      ports:
#          - 7777:8080
#      volumes:
#          - $PWD/youtrack/data:/opt/youtrack/data
#          - $PWD/youtrack/conf:/opt/youtrack/conf
#          - $PWD/youtrack/logs:/opt/youtrack/logs
#          - $PWD/youtrack/backups:/opt/youtrack/backups
#
#  upsource:
#      image: jetbrains/upsource:2018.1.357
#      container_name: upsource
#      hostname: upsource
#      ports:
#          - 7788:8080
#      volumes:
#          - $PWD/upsource/data:/opt/upsource/data
#          - $PWD/upsource/conf:/opt/upsource/conf
#          - $PWD/upsource/logs:/opt/upsource/logs
#          - $PWD/upsource/backups:/opt/upsource/backups
#
#
#  minio:
#    image: minio/minio
#    container_name: minio
#    hostname: minio
#    ports:
#      - "9091:9000"
#    environment:
#      - MINIO_ACCESS_KEY=${MINIO_USER_KEY}
#      - MINIO_SECRET_KEY=${MINIO_PASSWD_KEY}
#    volumes:
#      - $PWD/minio/data/:/data
#    command: server /data
#
#
#  fnserver:
#    image: fnproject/fnserver
#    container_name: fnserver
#    hostname: fnserver
#    restart: always
#    ports:
#      - "6666:8080"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#
#  fnserver-ui:
#    depends_on:
#      - fnserver
#    image: fnproject/ui
#    container_name: fnserver-ui
#    hostname: fnserver-ui
#    restart: always
#    ports:
#      - "6640:4000"
#    links:
#      - "fnserver"
#    environment:
#      - FN_API_URL=http://fnserver:8080
#

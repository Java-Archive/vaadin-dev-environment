version: '3.4'


networks:
  server-net:


services:

  nexus-server:
    container_name: nexus-server
    hostname: nexus-server
    image: sonatype/nexus3:${NEXUS_VERSION}
    networks:
      - server-net
    ports:
      - 8081:8081
      - 8082:8082
      - 8083:8083
    restart: always

  selenoid-server:
    container_name: selenoid-server
    hostname: selenoid-server
    image: aerokube/selenoid
    networks:
      - server-net
    ports:
      - 4444:4444
    volumes:
      - $PWD/selenoid/browsers.json:/etc/selenoid/browsers.json
      - $PWD/selenoid/video/:/opt/selenoid/video/
      - /var/run/docker.sock:/var/run/docker.sock

  selenoid-ui:
    container_name: selenoid-ui
    hostname: selenoid-ui
    image: aerokube/selenoid-ui
    networks:
      - server-net
    ports:
      - 8080:8080
    depends_on:
      - selenoid-server
    links:
      - selenoid-server
    command: [--selenoid-uri, "http://${SELENOID_DOCKER_EXTERNAL_IP}:4444"]

  git-server:
    container_name: git-server
    hostname: git-server
    image: gogs/gogs:${GOGS_VERSION}
    networks:
      - server-net
    ports:
      - 1022:22
      - 3000:3000
    volumes:
      - $PWD/gogs/data:/data
    restart: always

  drone-server:
    container_name: drone-server
    hostname: drone-server
    image: drone/drone:${DRONE_VERSION}
    networks:
      - server-net
    privileged: true
    ports:
      - 8000:8000
      - 9000:9000
    volumes:
      - ./droneio/drone:/var/lib/drone/
    restart: always
    depends_on:
      - git-server
      - nexus-server
    environment:
      - DRONE_DEBUG=true
      - DRONE_HOST=http://${DRONE_DOCKER_EXTERNAL_IP}:8000
      - DRONE_OPEN=true
      - DRONE_SECRET=ok
      - DRONE_PLUGIN_PULL=true
      - DRONE_GOGS=true
      - DRONE_GOGS_URL=http://git-server:3000
      - DRONE_GOGS_PRIVATE_MODE=true
      - DRONE_GOGS_SKIP_VERIFY=false

  drone-agent:
    container_name: drone-agent
    hostname: drone-agent
    image: drone/agent:${DRONE_VERSION}
    networks:
      - server-net
    privileged: true
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=ok

  drone-cli:
    build: droneio-cli/
    container_name: drone-cli
    hostname: drone-cli
    networks:
      - server-net
    restart: always
    depends_on:
      - drone-server
    links:
      - drone-server
    environment:
      - DRONE_SERVER=http://drone-server:8000
      - DRONE_TOKEN=${DRONE_DOCKER_SEC_TOKEN}
    stdin_open: true
    tty: true
